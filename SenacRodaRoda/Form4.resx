<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAArQAAAFbCAYAAAAkxB0QAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAXP0lEQVR4Xu3afcy2ZUHH8ee6r9utl2lbkLONzT9M/zFz09pKW+ryBU1BzMqWcy0JxsujKdUCQQk1
        xIyps83XDKegSf+0tvqjRoihExlMQaKSN3UIOYh3hAfOrqfdk2ftTJ7zOK/9zuM4z89v++x5dh1/cOy6
        7ofre1279+3+7SUdAAC0StACANA0QQsAQNMELQAATRO0AAA0TdACANA0QQsAQNMELQAATRO0AAA0TdAC
        ANA0QQsAQNMELQAATRO0AAA0TdACANA0QQsAQNMELQAATVtE0L7/P77V3XDv/Ytw7V33dlfeeTfM3j/d
        dgfM3t/f+r3u89++HQ7b5751W28Lzd0igvbTN3+3MzMzM5v7Djz6aG8LzZ2gNTMzM5vJBO2MCVozMzNb
        wgTtjAlaMzMzW8IE7YwJWjMzM1vCBO2MCVozMzNbwgTtjAlaMzMzW8IE7YwJWjMzM1vCBO2MCVozMzNb
        wgTtjAlaMzMzW8IE7YwJWjMzM1vCBO2MCVozMzNbwgTtjAlaMzMzW8IE7YwJWjMzM1vCBO2MCVozMzNb
        wgTtjAlaMzMzW8IE7YwJWjMzM1vCBO2MbTNoz7rgM90vHX8SGy844eTuRSeeAovyqxuvOGk/LM6rT31z
        dxw/1Innva9764c/PthZn7pwrzLGT9DO2DaD9tmve323b98+AICtWB/55L3KGD9BO2OCFgColaAdT9AO
        nKAFALZJ0I4naAdO0AIA2yRoxxO0AydoAYBtErTjCdqBE7QAwDYJ2vEE7cAJWgBgmwTteIJ24AQtALBN
        gnY8QTtwghYA2CZBO56gHThBCwBsk6AdT9AOnKAFALZJ0I4naAdO0AIA2yRoxxO0AydoAYBtErTjCdqB
        GxO0O0cf263Pei8AMDenv7v3vf9wCNrxBO3AjQraN+7v9h35QLfviAebsnvRpb2P12z1lPu73Qsu6z2r
        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
</value>
  </data>
</root>